17/07/2019
The software doubleSphere is a program written in C by Jeremy Dalphin.

It only takes two arguments: the input *.mesh file name followed by the output
*.sol file name (enumeration of scalar values associated with the mesh
vertices).

The first *.mesh file must already exist (since its vertices are read).
Warning: the second *.sol file is overwritten if it already exits (it is
automatically created if it does not exist).
The maximal number of characters allowed in the file names is 500

Remark: the maximal length for the file name can be changed at compilation
thanks to the NAME_SIZE_MAX preprocessor constant (do not forget to add one for
the terminating nul character).

The program computes either the reunion (default operator), the intersection,
or the symmetric difference of two spheres via the computation of level-set
functions at the mesh vertices.

The LS_OPERATION preprocessor constant rule the type of operation to perform
on the level-set function of the two spheres:
0=min(reunion) 1=max (intersection), 2=product(symmetric difference).

Remark: do not forget to recompile the program if LS_OPERATION is changed from
        its default value.

Warning: the level-set function w build is not a signed distance function
         meaning that it does not satisfies the normalization condition:
         || grad(w) || = 1.

Remark: the centers and radii of the two spheres can be changed at compilation.

The LS1_X, LS1_Y, LS1_Z, and LS1_R preprocessor constants rule the three point
coordinates and radius associated with the first sphere.
The LS2_X, LS2_Y, LS2_Z, and LS2_R preprocessor constants rule the three point
coordinates and radius associated with the second sphere.

By default, it is (0 0 2.36215767) and radius one for the first sphere and
(0 0 -2.36215767) with radius one for the second sphere. 

Do not forget to recompile the program if you have changed these values.

////////////////////////////////////////////////////////////////////////////////

The program can be compiled (with gcc compiler) by typing in a command prompt 

gcc doubleSphere.c -lm -o doubleSphere

and executed (on the provided example) by typing in a command prompt

./doubleSphere example.mesh example.sol 

Remark: do not forget to add the math linker (-lm option) with gcc, since the
sqrt function is used by the program

////////////////////////////////////////////////////////////////////////////////

An example is provided with the program. The file example.mesh contains the
tetrahedral 3D mesh of the cube [-3.5 3.5]x[-3.5 3.5]x[-3.5 3.5], which
can be vizualized with medit software (https://github.com/ISCDtoolbox/Medit).
A version of medit is also provided with the mpdToolbox (MPD/sources/medit).

The mesh is adapted to the metric provided in the metric.sol file, and
corresponds to the one associated with the the molecule HeH2.

The example.sol result produced by the program can be also displayed with medit
by simply typing 'm' after the loading of the mesh.

A screeshot if the result can be found in example.jpg file.

It represent the level-set function of the union two unit spheres centered at
(0 0 -2.36215767) and (0 0 2.36215767), i.e. centered at the two Hydrogen atoms
and both of radius one.

The two spheres can be interpolated into the mesh thanks to the mmg3d software
(https://github.com/dalphin5/mmg/tree/myFeature).
Such version of mmm3d is also provided with the mpdToolbox (MPD/sources/mmg3d).

Remark: this version of mmg3d in not the official one
(https://github.com/MmgTools/mmg) but a modified version that allows to adapt
a mesh to both geometry contained in the level-set function, but also by
respecting a given metric outside the boundary (that must be saved in a file
metric.sol, the name is important here).

The example.Adapted.mesh can be obtained from this version of mmg3d by typing
in a command prompt (assuming that mmg3d is compiled in the current directory):

./mmg3d -in example.mesh -ls -sol example.sol -out exampleAdapted.mesh -nr -hmin 0.05 -hmax 1.0 -hausd 0.01 -hgrad 2.0

The exampleAdapted.mesh generated by mmg3d interpolate the two spheres
implicitly encoded in the example.sol file associated with example.mesh

A screenshot of the result can be found in the exampleAdapted.jpg file.

In addition, the new exampleAdapted.mesh is such that the metric given in
metric.sol is respected as well as the geometry of the two spheres, and also
such that the two balls are a subpart of the mesh.

The exampleAdapted.sol file generated by mmg3d represents the metric computed
at the adapted mesh vertices.

